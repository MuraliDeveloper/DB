Table : EMPLOYEEINFO

columns:
---------------------------
id Number
firstname varchar2,
lastname varchar2,
salary Number ,
age  Number ,
deptid Number 


Create Table:
--------------------------------------
CREATE TABLE EMPLOYEEINFO (
    id Number NOT NULL ,
    firstname varchar2(50) NOT NULL ,
    lastname varchar2(50) ,
    salary Number ,
    age Number ,
	deptid Number
);


-- Delete the table
DROP TABLE EMPLOYEEINFO;

-- insert data to EMPLOYEEINFO table
INSERT INTO EMPLOYEEINFO (ID, FIRSTNAME, AGE, SALARY,deptid) VALUES ('32111', 'ravi', '26', '70000',100)



-- add new column pan 
ALTER TABLE EMPLOYEEINFO
ADD Pan varchar2(50);



Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1001,'SURTHNAI','kumar',25000,25,1,'EQQW2563W');

Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1002,'MEDA','kumar',30300,29,2,'EZZZ1234K');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1004,'UPPU','kumar',50000,27,4,'ANDM4321Q');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1003,'MEDA','SINGH',60000,26,3,'PANQ2345H');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1005,'RAMYA','kumar',40000,30,5,'RAMP1234F');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1006,'RAM','kumar',30000,29,6,'SEER0987P');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1007,'R','kumar',70000,29,7,'EZZX7654P');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1008,'AKASH','kumar',36000,28,8,'GHHJ9087L');
Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (1009,'ANAND','kumar',39000,30,28,'KHHJ1087L');





UPDATE 
------------------------------------------------------------------
--update the EMPLOYEEINFO last name to "kumar123"  
UPDATE EMPLOYEEINFO
SET LASTNAME='kumar123';   -- this will update all rows in the table


--update the EMPLOYEEINFO last name to "SINGH" whose id is 1003
UPDATE EMPLOYEEINFO
SET LASTNAME='SINGH'
WHERE ID = 1003;  -- this will update ONLY SINGLE row


--UPDATE EMPLOYEEINFO AGE TO 25,SALARY TO 80000 WHOSE NAME IS 'MEDA'
UPDATE EMPLOYEEINFO
SET AGE=25,SALARY=80000
WHERE FIRSTNAME='MEDA'


-- SET SPECIFIES WHAT COLUMN VALUES HAS TO BE UPDATED..
-- WHERE SPECIFIES THE FILTERING OF ROWS ;

--UPDATE SALARY , ADD 5000 ADDITIONAL ON CURRENT SALARY FOR ALL THE EMPLOYEEINFOS

UPDATE EMPLOYEEINFO
SET SALARY=SALARY+5000


--UPDATE THE SALARY TO 100000 WHOSE LASTNAME IS KUMAR123 AND AGE 27 
UPDATE EMPLOYEEINFO
SET SALARY=100000
WHERE LASTNAME='kumar123' AND AGE=27;
-- AND TO JOIN MULTIPLE CONDITIONS


--UPDATE SALARY TO 110000 WHOSE FIRSTNAME IS RAM OR AGE IS 28
UPDATE EMPLOYEEINFO
SET SALARY=110000
WHERE FIRSTNAME='RAM' OR AGE=28



--HOW TO DELETE A ROW BASED ON ID  [WHOSE ID IS 1004 ]
DELETE FROM  EMPLOYEEINFO
WHERE ID=1004;

--DELETE A ROW BASED ON  FIRST NAME   [WHOSE FIRSTNAME IS RAM ] 
DELETE FROM  EMPLOYEEINFO
WHERE FIRSTNAME='RAM';


--DELETE ROWS WHOSE SALARY IS GREATER THAN 50000 
DELETE FROM  EMPLOYEEINFO
WHERE SALARY>50000;

--HOW TO DELETE ALL THE ROWS 
--DELETE FROM EMPLOYEEINFO--

OTHER possible operators for conditions
---------------------------------------
=       --> equal to
!=     --> not equal to
>      --> greater than
<      --> less than
>=     --> greatre than or equal to
<=     --> less than or equla to

--READ OPERATIONS

--READ ALL THE ROWS FROM EMPLOYEEINFO TABLE
SELECT * FROM EMPLOYEEINFO ;
-- * SPECIFIES TO FETCH ALL COLUMNS

--GET ALL THE EMPLOYEEINFO ID'S
SELECT ID FROM EMPLOYEEINFO ;

--GET FIRST NAME FOR ALL THE EMPLOYEEINFOS
SELECT FIRSTNAME FROM EMPLOYEEINFO;

--GET FIRSTNAME AND LASTNAME FOR ALL THE EMPLOYEEINFOS
SELECT FIRSTNAME,LASTNAME FROM EMPLOYEEINFO;

--DETAILS OF EMPLOYE WHOSE ID IS 1007
SELECT * FROM EMPLOYEEINFO 
WHERE ID=1007;

--GET FIRSTNAME AND LASTNAME WHOSE ID IS 1007
SELECT FIRSTNAME,LASTNAME FROM EMPLOYEEINFO
WHERE ID=1007;

--GET EMPLOYEEINFO DETAILS WHOSE SALARY IS LESSTHAN 30000
SELECT * FROM EMPLOYEEINFO
WHERE SALARY  < 30000;

--GET EMPLOYEEINFO DETAILS WHOSE SALARY IS GREATER THAN 320000
SELECT * FROM EMPLOYEEINFO
WHERE SALARY  >  32000;

-- Get all unique FIRSTNAME 
SELECT FIRSTNAME FROM EMPLOYEEINFO; -- with duplicates
SELECT DISTINCT FIRSTNAME FROM EMPLOYEEINFO;  -- without duplicates

--GET MAXIMUM SALARY OF EMPLOYEEINFOS
SELECT MAX(SALARY) FROM EMPLOYEEINFO;

--GET MINIMUM SALARY OF EMPLOYEEINFO
SELECT MIN(SALARY) FROM EMPLOYEEINFO;


--GET COUNT OF ALL THE ROWS
SELECT COUNT (*) FROM EMPLOYEEINFO;

--SUM OF ALL SALARIES
SELECT SUM(SALARY) FROM EMPLOYEEINFO;

--AVG OF ALL SALARIES
SELECT AVG(SALARY) FROM EMPLOYEEINFO;

--SORTING ORDER OF EMPLOYEEINFOS

--SORT Results based on FIRSTNAME ASC
SELECT * FROM EMPLOYEEINFO 
ORDER BY FIRSTNAME;

--SORT Results based on FIRSTNAME DESC
SELECT * FROM EMPLOYEEINFO 
ORDER BY FIRSTNAME DESC;

--SORTING ORDER OF SALARY

--SORT Results based on SALARY ASC
SELECT * FROM EMPLOYEEINFO
ORDER BY SALARY

--SORT Results based on SALARY DESC
SELECT * FROM EMPLOYEEINFO
ORDER BY SALARY DESC



-- GET ALL EMPS WHOSE SALARY IS BETWEEN 30000  TO 700000
SELECT * FROM EMPLOYEEINFO
WHERE SALARY >=30000 AND SALARY <= 70000

SELECT * FROM EMPLOYEEINFO
WHERE SALARY BETWEEN 30000 AND 70000

--SHOW EMPLOYEEINFO DETAILS WHOSE EMP. ID ARE 1002 , 1003 , 1004
-- APPROACH1
SELECT * FROM EMPLOYEEINFO
WHERE ID=1002 OR ID=1003 OR ID= 1004; 

-- APPROACH2
SELECT * FROM EMPLOYEEINFO
WHERE ID IN (1002,1003,1004);

-- SIMILAR MATCH QUERIES [ USING Like operator ]  

--	Find all EMPLOYEEINFOs whose  FIRSTNAME start with "A"
SELECT * FROM EMPLOYEEINFO
WHERE FIRSTNAME LIKE 'A%'; 


--	Find all EMPLOYEEINFOs whose LASTNAME end with "R"
SELECT * FROM EMPLOYEEINFO
WHERE LASTNAME LIKE '%r'; 

--Find all EMPLOYEEINFOs whose FIRSTNAME  have "AM" in any position
SELECT * FROM EMPLOYEEINFO
WHERE FIRSTNAME LIKE '%AM%';  


--	Finds all EMPLOYEEINFOs  whose FIRSTNAME  have "r" in the second position


SELECT * FROM EMPLOYEEINFO
WHERE FIRSTNAME LIKE '_r%'; 

SELECT * FROM EMPLOYEEINFO
WHERE FIRSTNAME LIKE 'm_%'; --	Finds any values that start with "m" and are at least 2 characters in length


SELECT * FROM EMPLOYEEINFO
WHERE FIRSTNAME LIKE 'm__%'; --	Finds any values that start with "m" and are at least 3 characters in length


--	Finds any values that start with "m" and ends with "i"
SELECT * FROM EMPLOYEEINFO
WHERE FIRSTNAME LIKE 'm%i'; 








ALIAS [ COLUMN/ TABLE]:
----------
--DISPLAY THE NAMES OF EMPOLYEE

SELECT FIRSTNAME 
FROM EMPLOYEEINFO;
 
SELECT FIRSTNAME AS NAME
FROM EMPLOYEEINFO;


SELECT FIRSTNAME || ' , ' || LASTNAME AS "MY_NAME"  from  EMPLOYEEINFO;


--Get all  ID AND NAME 
SELECT  ID , FIRSTNAME  
	   FROM EMPLOYEEINFO ; 
	   
	   
SELECT E.ID AS MYID,
       E.FIRSTNAME AS MYNAME
	   FROM EMPLOYEEINFO E     
-- HERE E IS THE ALIAS FOR TABLE "EMPLOYEEINFO"
-- HERE MYID IS THE ALIAS FOR COLUMN "ID"
-- HERE MYNAME IS THE ALIAS FOR COLUMN "FIRSTNAME"


--NAME OF THE EMPLOYEEINFO WHO IS HAVING MAX. SALARY
SELECT FIRSTNAME,LASTNAME FROM EMPLOYEEINFO  
WHERE SALARY=(SELECT MAX(SALARY) FROM EMPLOYEEINFO);

--GET NAME OF THE EMPLOYEEINFO WHO IS HAVING MIN. SALARY
SELECT FIRSTNAME,LASTNAME FROM EMPLOYEEINFO
WHERE SALARY=(SELECT MIN(SALARY) FROM EMPLOYEEINFO);


-- GET 1ST/2ND/Nth HIGHEST SALARY
SELECT * FROM EMPLOYEEINFO E1 
WHERE
2 = (  SELECT COUNT(DISTINCT SALARY)  FROM EMPLOYEEINFO E2  
     WHERE E2.SALARY > E1.SALARY )
	 

Group EMP count BASED ON deptid:
----------------
SELECT deptid ,COUNT(ID)
FROM EMPLOYEEINFO
GROUP BY deptid;


TABLE-1:
--------------
ID   - PK
NAME
AGE 


TABLE-2:
----------------
ID
ORDERnNO
ITEMS
EID   - FK -----> REFERING TO THE ID COLUMN OF TABLE1





 -- PRIMARY KEY- UNIQUE , NOT NULL     , IS THE UNIQUE IDENTIFICATION FOR THE ROW.
 -- FOREIGN KEY  - IS THE COLUMN THAT  REFERS TO THE PRIMARY KEY OF ANOTHER TABLE.
 
 
 


SELECT OrderID, Quantity,
CASE
    WHEN Quantity > 30 THEN 'The quantity is greater than 30'
    WHEN Quantity = 30 THEN 'The quantity is 30'
    ELSE 'The quantity is under 30'
END AS QuantityText
FROM OrderDetails;



CREATE TABLE Customer (
    ID Number NOT NULL PRIMARY KEY,
    LastName varchar2(30) NOT NULL,
    FirstName varchar(255),
    Age Number
);

CREATE TABLE Orders (
    OrderID Number NOT NULL PRIMARY KEY,
    OrderNumber Number NOT NULL,
    custId Number FOREIGN KEY REFERENCES Customer(ID)
);


ALTER TABLE Customer
ADD PRIMARY KEY (ID);



ALTER TABLE Customer
DROP PRIMARY KEY;





ALTER TABLE Orders
ADD FOREIGN KEY (custId) REFERENCES Customer(ID);


ALTER TABLE Orders
DROP CONSTRAINT FK_PersonOrder;


select c.id, c.FirstName  , o.OrderNumber 
from Customer c, Orders  o
where c.ID=o.custid

select c.id, c.FirstName  , o.OrderNumber 
from Customer c, Orders  o
where c.ID=o.custid
AND c.id=2000



syntax:
------------------------------
SELECT column_name(s)
FROM table1
INNER JOIN table2
ON table1.column_name = table2.column_name;

SELECT column_name(s)
FROM table1
LEFT JOIN table2
ON table1.column_name = table2.column_name;

SELECT column_name(s)
FROM table1
RIGHT JOIN table2
ON table1.column_name = table2.column_name;



Inner join:
---------------
select c.id, c.FirstName  , o.OrderNumber 
from Customer c
INNER JOIN  Orders o
ON  c.ID=o.custid


LEFT JOIN:
---------------
select c.id, c.FirstName  , o.OrderNumber 
from Customer c
LEFT JOIN  Orders o
ON  c.ID=o.custid

RIGHT JOIN:
---------------------
select c.id, c.FirstName  , o.OrderNumber 
from Customer c
RIGHT JOIN  Orders o
ON  c.ID=o.custid







CREATE SEQUENCE seq_person
MINVALUE 5000
START WITH 5000
INCREMENT BY 1
CACHE 10;



INSERT INTO Persons (Personid,FirstName,LastName)
VALUES (seq_person.nextval,'Lars','Monsen');


Insert into EMPLOYEEINFO (ID,FIRSTNAME,LASTNAME,SALARY,AGE,DEPTID,PAN) values (seq_person.nextval,'ANAND1','kumar2',37000,30,28,'KHHJ1087L');











1.Address Table
id    ( PK)       -> NOT NULL and unique
street
city
country 



2.Employee table
ID     ( PK)       -> NOT NULL and unique
firstname
lastname
currAddr  (FK)    -> Refers to the id column of Address Table



Address:
-----------------------
id  street     city   country     zip
100   abc      hyd     in        7676
200   abc1     che     in        7677
300   abc2     mum     in        7678
400   abc3     bang    in        7679


Employee:
---------------------
id  firstname lastname  currAddr
10   user1     kumar1      100 
20   user2     kumar2      200
30   user3     kumar3      300
40   user4     kumar4      400


1.Display EMPLOYEEINFO
select * from EMPLOYEEINFO



2.Display EMPLOYEEINFO with address?
[use joins]
select e.id, e.firstname , e.lastname ,a.street ,a.city, a.country, a.zip
from EMPLOYEEINFO e , Address a
where e.id = a.id
	    