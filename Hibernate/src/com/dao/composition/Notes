has-A (composition)
---------------------
1 table two java classes.


DB layer:
------------
Table: PersonWithAddress
Columns: id , userName ,


Java Layer:
-------------
Earlier : 1 entity classs
Now : 
since Address in used for different models like Person, Employee, Student , Order.
Solution : we need seperate class for Address.


Create Two classes for one table
1.PersonWithAddress.java
2.Address.java

person has a address.
New changes:
--------
- use @Embedded in PersonWithAddress.java
- use @Embeddable for Address.java

	
PersonWithAddress.java:
----------------------------------
 
 
@Entity
@Table(name = "PersonWithAddress")
public class PersonWithAddress {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id")
	private int id;

	@Column(name = "userName")
	private String name;

	@Column(name = "age")
	private int age;

	@Embedded // this annotation specifies that address obj is part of same table
	private Address curAddress;
	
 	  
	
}



Address.java:
--------------------

import javax.persistence.Column;
import javax.persistence.Embeddable;

@Embeddable
public class Address {

	@Column(name = "streetNo")
	private String streetNo;
	
	@Column(name = "city")
	private String city;
	
	@Column(name = "state")
	private String state;
	
	@Column(name = "country")
	private String country;
	
	@Column(name = "pin")
	private int pin;

	 }




1. PersonWithAddress.java
( - is a entity class )
 - Use @Entity
       @Table(name = "PersonWithAddress")
   before class name

and use  @Embedded for address obj [	private Address curAddress; ]

	
2. Address.java:
- is not a entity class
-Use @Embeddable before the class name:

@Embeddable 
public class Address {

}
@Embeddable
public class Address {
